Index: app/build.gradle.kts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>plugins {\r\n    alias(libs.plugins.android.application)\r\n    alias(libs.plugins.kotlin.android)\r\n    alias(libs.plugins.googleService)\r\n}\r\n\r\nandroid {\r\n    namespace = \"com.example.myappcancheito\"\r\n    compileSdk = 36\r\n\r\n    defaultConfig {\r\n        applicationId = \"com.example.myappcancheito\"\r\n        minSdk = 29\r\n        targetSdk = 36\r\n        versionCode = 1\r\n        versionName = \"1.0\"\r\n\r\n        testInstrumentationRunner = \"androidx.test.runner.AndroidJUnitRunner\"\r\n    }\r\n\r\n    buildTypes {\r\n        release {\r\n            isMinifyEnabled = false\r\n            proguardFiles(\r\n                getDefaultProguardFile(\"proguard-android-optimize.txt\"),\r\n                \"proguard-rules.pro\"\r\n            )\r\n        }\r\n    }\r\n    compileOptions {\r\n        sourceCompatibility = JavaVersion.VERSION_11\r\n        targetCompatibility = JavaVersion.VERSION_11\r\n    }\r\n    kotlinOptions {\r\n        jvmTarget = \"11\"\r\n    }\r\n    buildFeatures {\r\n        viewBinding = true\r\n    }\r\n}\r\n\r\ndependencies {\r\n\r\n    implementation(libs.androidx.core.ktx)\r\n    implementation(libs.androidx.appcompat)\r\n    implementation(libs.material)\r\n    implementation(libs.androidx.constraintlayout)\r\n    implementation(libs.androidx.lifecycle.livedata.ktx)\r\n    implementation(libs.androidx.lifecycle.viewmodel.ktx)\r\n    implementation(libs.androidx.navigation.fragment.ktx)\r\n    implementation(libs.androidx.navigation.ui.ktx)\r\n    implementation(libs.lottie)\r\n    implementation(libs.firebaseAuth)\r\n    implementation(libs.credentials)\r\n    implementation(libs.credentials.play.services.auth)\r\n    implementation(libs.googleid)\r\n    implementation(libs.storage)\r\n    implementation(libs.firebaseDatabase)\r\n    implementation(libs.androidx.activity)\r\n    testImplementation(libs.junit)\r\n    androidTestImplementation(libs.androidx.junit)\r\n    androidTestImplementation(libs.androidx.espresso.core)\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/build.gradle.kts b/app/build.gradle.kts
--- a/app/build.gradle.kts	(revision 803997e8d66606b6bd80ea336dacd55db3d85c57)
+++ b/app/build.gradle.kts	(date 1758579739292)
@@ -60,4 +60,6 @@
     testImplementation(libs.junit)
     androidTestImplementation(libs.androidx.junit)
     androidTestImplementation(libs.androidx.espresso.core)
+
+    implementation("io.coil-kt:coil:2.7.0")
 }
\ No newline at end of file
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"ExternalStorageConfigurationManager\" enabled=\"true\" />\r\n  <component name=\"ProjectInspectionProfilesVisibleTreeState\">\r\n    <entry key=\"Project Default\">\r\n      <profile-state>\r\n        <expanded-state>\r\n          <State>\r\n            <id>Android Lint: Performance</id>\r\n          </State>\r\n          <State>\r\n            <id>Groovy</id>\r\n          </State>\r\n          <State>\r\n            <id>JVM languages</id>\r\n          </State>\r\n          <State>\r\n            <id>Java</id>\r\n          </State>\r\n          <State>\r\n            <id>Numeric issuesJava</id>\r\n          </State>\r\n          <State>\r\n            <id>Threading issuesGroovy</id>\r\n          </State>\r\n          <State>\r\n            <id>Threading issuesJava</id>\r\n          </State>\r\n        </expanded-state>\r\n        <selected-state>\r\n          <State>\r\n            <id>User defined</id>\r\n          </State>\r\n        </selected-state>\r\n      </profile-state>\r\n    </entry>\r\n  </component>\r\n  <component name=\"ProjectRootManager\" version=\"2\" languageLevel=\"JDK_21\" default=\"true\" project-jdk-name=\"jbr-21\" project-jdk-type=\"JavaSDK\">\r\n    <output url=\"file://$PROJECT_DIR$/build/classes\" />\r\n  </component>\r\n  <component name=\"ProjectType\">\r\n    <option name=\"id\" value=\"Android\" />\r\n  </component>\r\n  <component name=\"VisualizationToolProject\">\r\n    <option name=\"state\">\r\n      <ProjectState>\r\n        <option name=\"scale\" value=\"0.15036254882812503\" />\r\n      </ProjectState>\r\n    </option>\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/misc.xml b/.idea/misc.xml
--- a/.idea/misc.xml	(revision 803997e8d66606b6bd80ea336dacd55db3d85c57)
+++ b/.idea/misc.xml	(date 1758578863445)
@@ -1,4 +1,3 @@
-<?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
   <component name="ExternalStorageConfigurationManager" enabled="true" />
   <component name="ProjectInspectionProfilesVisibleTreeState">
Index: app/src/main/java/com/example/myappcancheito/postulante/Nav_Fragments_Postulante/FragmentPerfilP.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/myappcancheito/postulante/Nav_Fragments_Postulante/FragmentPerfilP.kt b/app/src/main/java/com/example/myappcancheito/postulante/Nav_Fragments_Postulante/FragmentPerfilP.kt
new file mode 100644
--- /dev/null	(date 1758582054563)
+++ b/app/src/main/java/com/example/myappcancheito/postulante/Nav_Fragments_Postulante/FragmentPerfilP.kt	(date 1758582054563)
@@ -0,0 +1,288 @@
+package com.example.myappcancheito.postulante.Nav_Fragments_Postulante
+
+import android.net.Uri
+import android.os.Bundle
+import android.text.InputType
+import android.view.View
+import android.widget.EditText
+import android.widget.Toast
+import androidx.activity.result.contract.ActivityResultContracts
+import androidx.appcompat.app.AlertDialog
+import androidx.fragment.app.Fragment
+import coil.load
+import com.example.myappcancheito.R
+import com.example.myappcancheito.databinding.FragmentPerfilPostulanteBinding
+import com.google.firebase.auth.FirebaseAuth
+import com.google.firebase.database.FirebaseDatabase
+import com.google.firebase.storage.FirebaseStorage
+import kotlinx.coroutines.CoroutineScope
+import kotlinx.coroutines.Dispatchers
+import kotlinx.coroutines.launch
+import kotlinx.coroutines.tasks.await
+import kotlinx.coroutines.withContext
+import java.text.SimpleDateFormat
+import java.util.Date
+import java.util.Locale
+import java.util.concurrent.CountDownLatch
+
+class FragmentPerfilP : Fragment(R.layout.fragment_perfil_postulante) {
+
+    private var _binding: FragmentPerfilPostulanteBinding? = null
+    private val binding get() = _binding!!
+
+    // Selecciones locales
+    private var selectedImageUri: Uri? = null
+    private var selectedPdfUri: Uri? = null
+
+    // Flags para eliminar en DB si el usuario pulsa "Quitar"
+    private var removePhoto: Boolean = false
+    private var removeCv: Boolean = false
+
+    // Launchers para elegir archivos
+    private val pickImageLauncher = registerForActivityResult(
+        ActivityResultContracts.GetContent()
+    ) { uri ->
+        if (uri != null) {
+            selectedImageUri = uri
+            removePhoto = false
+            binding.ivFoto.load(uri)
+        }
+    }
+
+    private val pickPdfLauncher = registerForActivityResult(
+        ActivityResultContracts.GetContent()
+    ) { uri ->
+        if (uri != null) {
+            selectedPdfUri = uri
+            removeCv = false
+            binding.tvCvActual.text = "CV seleccionado: ${uri.lastPathSegment ?: "archivo.pdf"}"
+        }
+    }
+
+    override fun onViewCreated(view: View, savedInstanceState: Bundle?) {
+        super.onViewCreated(view, savedInstanceState)
+        _binding = FragmentPerfilPostulanteBinding.bind(view)
+
+        binding.progress.visibility = View.VISIBLE
+        cargarPerfil()
+
+        binding.btnSeleccionarFoto.setOnClickListener { pickImageLauncher.launch("image/*") }
+        binding.btnQuitarFoto.setOnClickListener {
+            selectedImageUri = null
+            removePhoto = true
+            binding.ivFoto.setImageResource(R.mipmap.ic_launcher_round)
+        }
+
+        binding.btnSeleccionarCv.setOnClickListener { pickPdfLauncher.launch("application/pdf") }
+        binding.btnQuitarCv.setOnClickListener {
+            selectedPdfUri = null
+            removeCv = true
+            binding.tvCvActual.text = "CV: (ninguno)"
+        }
+
+        binding.btnGuardar.setOnClickListener { guardarCambios() }
+    }
+
+    private fun cargarPerfil() {
+        val user = FirebaseAuth.getInstance().currentUser
+        if (user == null) {
+            Toast.makeText(requireContext(), "Inicia sesión para ver tu perfil", Toast.LENGTH_LONG).show()
+            binding.progress.visibility = View.GONE
+            return
+        }
+
+        val ref = FirebaseDatabase.getInstance()
+            .getReference("Usuarios")
+            .child(user.uid)
+
+        ref.get().addOnSuccessListener { snapshot ->
+            binding.progress.visibility = View.GONE
+            if (!snapshot.exists()) {
+                // Mostrar datos básicos desde Auth (solo lectura)
+                binding.tvNombre.text = "Nombre: ${user.displayName ?: "-"}"
+                binding.tvEmail.text  = "Correo: ${user.email ?: "-"}"
+                binding.tvTipo.text   = "Tipo: -"
+                binding.tvRegistro.text = "Registrado: -"
+                // Reset flags
+                removePhoto = false
+                removeCv = false
+                return@addOnSuccessListener
+            }
+
+            val perfil = snapshot.getValue(PostulanteProfile::class.java)
+            val nombre = perfil?.nombre_completo ?: user.displayName ?: "-"
+            val email = perfil?.email ?: user.email ?: "-"
+            val tipo = perfil?.tipoUsuario ?: "-"
+            val registrado = formatearTiempo(perfil?.tiempo_registro)
+
+            // SOLO LECTURA
+            binding.tvNombre.text = "Nombre: $nombre"
+            binding.tvEmail.text  = "Correo: $email"
+            binding.tvTipo.text   = "Tipo: $tipo"
+            binding.tvRegistro.text = "Registrado: $registrado"
+
+            // Editables
+            binding.etUbicacion.setText(perfil?.ubicacion ?: "")
+            binding.etFormacion.setText(perfil?.formacion ?: "")
+            binding.etExperiencia.setText(perfil?.experiencia ?: "")
+
+            val fotoUrl = perfil?.fotoPerfilUrl
+            if (!fotoUrl.isNullOrBlank()) binding.ivFoto.load(fotoUrl)
+            else binding.ivFoto.setImageResource(R.mipmap.ic_launcher_round)
+
+            val cvUrl = perfil?.cvUrl
+            binding.tvCvActual.text = if (!cvUrl.isNullOrBlank())
+                "CV: disponible"
+            else
+                "CV: (ninguno)"
+
+
+            removePhoto = false
+            removeCv = false
+
+        }.addOnFailureListener { e ->
+            binding.progress.visibility = View.GONE
+            Toast.makeText(requireContext(), "Error: ${e.message}", Toast.LENGTH_SHORT).show()
+        }
+    }
+
+    private fun guardarCambios() {
+        val user = FirebaseAuth.getInstance().currentUser
+        if (user == null) {
+            Toast.makeText(requireContext(), "Inicia sesión para guardar", Toast.LENGTH_LONG).show()
+            return
+        }
+
+        // Solo campos editables
+        val ubicacion = binding.etUbicacion.text.toString().trim()
+        val formacion = binding.etFormacion.text.toString().trim()
+        val experiencia = binding.etExperiencia.text.toString().trim()
+
+        binding.progress.visibility = View.VISIBLE
+        binding.btnGuardar.isEnabled = false
+
+        CoroutineScope(Dispatchers.Main).launch {
+            try {
+                // 1) Subir archivos si corresponde
+                val storage = FirebaseStorage.getInstance().reference
+                var fotoUrlSubida: String? = null
+                var cvUrlSubido: String? = null
+
+                if (selectedImageUri != null) {
+                    val fotoRef = storage.child("perfiles/${user.uid}/foto_${System.currentTimeMillis()}.jpg")
+                    fotoRef.putFile(selectedImageUri!!).await()
+                    fotoUrlSubida = fotoRef.downloadUrl.await().toString()
+                }
+
+                if (selectedPdfUri != null) {
+                    val cvRef = storage.child("perfiles/${user.uid}/cv_${System.currentTimeMillis()}.pdf")
+                    cvRef.putFile(selectedPdfUri!!).await()
+                    cvUrlSubido = cvRef.downloadUrl.await().toString()
+                }
+
+                // 2) Guardar en RTDB (NO tocar nombre ni correo)
+                val ref = FirebaseDatabase.getInstance().getReference("Usuarios").child(user.uid)
+                val snapshot = ref.get().await()
+
+                val updates = mutableMapOf<String, Any?>(
+                    "ubicacion" to ubicacion.ifBlank { null },
+                    "formacion" to formacion.ifBlank { null },
+                    "experiencia" to experiencia.ifBlank { null }
+                )
+
+                // Foto
+                when {
+                    fotoUrlSubida != null -> updates["fotoPerfilUrl"] = fotoUrlSubida
+                    removePhoto -> updates["fotoPerfilUrl"] = null   // borrar clave
+                }
+
+                // CV
+                when {
+                    cvUrlSubido != null -> updates["cvUrl"] = cvUrlSubido
+                    removeCv -> updates["cvUrl"] = null             // borrar clave
+                }
+
+                if (!snapshot.exists()) {
+                    // Crear perfil nuevo con nombre/correo de Auth (solo lectura) y demás editables
+                    val nuevo = PostulanteProfile(
+                        uid = user.uid,
+                        nombre_completo = user.displayName,
+                        email = user.email,
+                        tipoUsuario = "Postulante",
+                        tiempo_registro = System.currentTimeMillis(),
+                        ubicacion = updates["ubicacion"] as String?,
+                        formacion = updates["formacion"] as String?,
+                        experiencia = updates["experiencia"] as String?,
+                        fotoPerfilUrl = updates["fotoPerfilUrl"] as String?,
+                        cvUrl = updates["cvUrl"] as String?
+                    )
+                    ref.setValue(nuevo).await()
+                } else {
+                    // No toques nombre_completo/email: no se incluyen en updates
+                    ref.updateChildren(updates as Map<String, Any?>).await()
+                }
+
+                withContext(Dispatchers.Main) {
+                    binding.progress.visibility = View.GONE
+                    binding.btnGuardar.isEnabled = true
+                    Toast.makeText(requireContext(), "Perfil actualizado", Toast.LENGTH_SHORT).show()
+
+                    // Reset
+                    selectedImageUri = null
+                    selectedPdfUri = null
+                    removePhoto = false
+                    removeCv = false
+
+                    cargarPerfil()
+                }
+            } catch (e: Exception) {
+                withContext(Dispatchers.Main) {
+                    binding.progress.visibility = View.GONE
+                    binding.btnGuardar.isEnabled = true
+                    Toast.makeText(requireContext(), "Error al guardar: ${e.message}", Toast.LENGTH_LONG).show()
+                }
+            }
+        }
+    }
+
+    /** (Solo se usa si algún día requieres reauth para otros cambios) */
+    private suspend fun pedirPasswordYReautenticar(emailActual: String): Boolean =
+        withContext(Dispatchers.Main) {
+            var result = false
+            val editText = EditText(requireContext()).apply {
+                inputType = InputType.TYPE_CLASS_TEXT or InputType.TYPE_TEXT_VARIATION_PASSWORD
+                hint = "Contraseña actual"
+                setPadding(32, 24, 32, 24)
+            }
+            val latch = CountDownLatch(1)
+
+            AlertDialog.Builder(requireContext())
+                .setTitle("Reautenticación requerida")
+                .setMessage("Para continuar, ingresa tu contraseña de $emailActual")
+                .setView(editText)
+                .setPositiveButton("Confirmar") { _, _ -> latch.countDown() }
+                .setNegativeButton("Cancelar") { _, _ -> latch.countDown() }
+                .setCancelable(false)
+                .show()
+
+            withContext(Dispatchers.IO) { latch.await() }
+            result
+        }
+
+    private fun formatearTiempo(valor: Any?): String {
+        return when (valor) {
+            is Number -> {
+                val millis = valor.toLong()
+                val df = SimpleDateFormat("dd/MM/yyyy HH:mm", Locale.getDefault())
+                df.format(Date(millis))
+            }
+            is String -> valor
+            else -> "-"
+        }
+    }
+
+    override fun onDestroyView() {
+        super.onDestroyView()
+        _binding = null
+    }
+}
Index: app/src/main/res/layout/fragment_perfil_postulante.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/fragment_perfil_postulante.xml b/app/src/main/res/layout/fragment_perfil_postulante.xml
new file mode 100644
--- /dev/null	(date 1758582062837)
+++ b/app/src/main/res/layout/fragment_perfil_postulante.xml	(date 1758582062837)
@@ -0,0 +1,160 @@
+<?xml version="1.0" encoding="utf-8"?>
+<ScrollView xmlns:android="http://schemas.android.com/apk/res/android"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    android:padding="20dp">
+
+    <LinearLayout
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:orientation="vertical">
+
+        <TextView
+            android:id="@+id/tvTitulo"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:text="Mi Perfil"
+            android:textSize="22sp"
+            android:textStyle="bold"
+            android:paddingBottom="12dp" />
+
+        <!-- FOTO -->
+        <ImageView
+            android:id="@+id/ivFoto"
+            android:layout_width="120dp"
+            android:layout_height="120dp"
+            android:layout_marginBottom="8dp"
+            android:contentDescription="Foto de perfil"
+            android:scaleType="centerCrop"
+            android:src="@mipmap/ic_launcher_round" />
+
+        <LinearLayout
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:orientation="horizontal"
+            android:gravity="start"
+            android:paddingBottom="12dp">
+
+            <Button
+                android:id="@+id/btnSeleccionarFoto"
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:text="Cambiar foto" />
+
+            <Space
+                android:layout_width="12dp"
+                android:layout_height="wrap_content" />
+
+            <Button
+                android:id="@+id/btnQuitarFoto"
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:text="Quitar foto" />
+        </LinearLayout>
+
+        <!-- CAMPOS EDITABLES -->
+        <TextView
+            android:id="@+id/tvNombre"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:text="Nombre: -"
+            android:textSize="16sp"/>
+
+        <TextView
+            android:id="@+id/tvEmail"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:text="Correo: -"
+            android:textSize="16sp"/>
+
+
+        <!-- CAMPOS EDITABLES NUEVOS -->
+        <EditText
+            android:id="@+id/etUbicacion"
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:hint="Ubicación (ciudad, país)"
+            android:inputType="textCapWords"
+            android:padding="8dp" />
+
+        <EditText
+            android:id="@+id/etFormacion"
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:hint="Formación (p. ej., Ing. Sistemas)"
+            android:inputType="textCapSentences"
+            android:padding="8dp"
+            android:layout_marginTop="8dp" />
+
+        <EditText
+            android:id="@+id/etExperiencia"
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:hint="Experiencia (resumen)"
+            android:inputType="textMultiLine"
+            android:minLines="3"
+            android:padding="8dp"
+            android:layout_marginTop="8dp" />
+
+        <TextView
+            android:id="@+id/tvTipo"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:text="Tipo: -"
+            android:textSize="16sp" />
+
+        <TextView
+            android:id="@+id/tvRegistro"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:text="Registrado: -"
+            android:textSize="16sp"
+            android:paddingBottom="12dp" />
+        <!-- CV -->
+        <TextView
+            android:id="@+id/tvCvActual"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:text="CV: (ninguno)"
+            android:layout_marginTop="12dp" />
+
+        <LinearLayout
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:orientation="horizontal"
+            android:gravity="start"
+            android:paddingBottom="12dp"
+            android:layout_marginTop="6dp">
+
+            <Button
+                android:id="@+id/btnSeleccionarCv"
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:text="Seleccionar CV (PDF)" />
+
+            <Space
+                android:layout_width="12dp"
+                android:layout_height="wrap_content" />
+
+            <Button
+                android:id="@+id/btnQuitarCv"
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:text="Quitar CV" />
+        </LinearLayout>
+
+        <!-- GUARDAR -->
+        <Button
+            android:id="@+id/btnGuardar"
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:text="Guardar cambios" />
+
+        <ProgressBar
+            android:id="@+id/progress"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:layout_marginTop="16dp"
+            android:visibility="gone" />
+    </LinearLayout>
+</ScrollView>
Index: app/src/main/res/layout/fragment_perfil_p.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/fragment_perfil_p.xml b/app/src/main/res/layout/fragment_perfil_p.xml
new file mode 100644
--- /dev/null	(date 1758579658456)
+++ b/app/src/main/res/layout/fragment_perfil_p.xml	(date 1758579658456)
@@ -0,0 +1,16 @@
+<?xml version="1.0" encoding="utf-8"?>
+<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    android:gravity="center"
+    android:orientation="vertical"
+    android:padding="20dp">
+
+    <TextView
+        android:id="@+id/tvPerfil"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:text="@string/registrar_postulante"
+        android:textSize="20sp"
+        android:textStyle="bold"/>
+</LinearLayout>
Index: app/src/main/java/com/example/myappcancheito/postulante/MainActivityPostulante.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.myappcancheito.postulante\r\n\r\nimport android.content.Intent\r\nimport android.os.Bundle\r\nimport android.view.MenuItem\r\nimport android.widget.Toast\r\nimport androidx.appcompat.app.ActionBarDrawerToggle\r\nimport androidx.appcompat.app.AppCompatActivity\r\nimport androidx.core.view.GravityCompat\r\nimport androidx.fragment.app.Fragment\r\nimport com.example.myappcancheito.R\r\nimport com.example.myappcancheito.SelecionarTipoActivity\r\nimport com.example.myappcancheito.databinding.ActivityMainPostulanteBinding\r\nimport com.example.myappcancheito.postulante.Nav_Fragments_Postulante.FragmentInicioP\r\nimport com.google.android.material.navigation.NavigationView\r\nimport com.google.firebase.auth.FirebaseAuth\r\n\r\nclass MainActivityPostulante : AppCompatActivity(), NavigationView.OnNavigationItemSelectedListener {\r\n\r\n    private lateinit var binding: ActivityMainPostulanteBinding\r\n    private lateinit var firebaseAuth: FirebaseAuth\r\n\r\n    override fun onCreate(savedInstanceState: Bundle?) {\r\n        super.onCreate(savedInstanceState)\r\n        binding = ActivityMainPostulanteBinding.inflate(layoutInflater)\r\n        setContentView(binding.root)\r\n\r\n        val toolbar = binding.appBarMain.toolbar\r\n        setSupportActionBar(toolbar)\r\n\r\n        val toggle = ActionBarDrawerToggle(\r\n            this,\r\n            binding.drawerLayout,\r\n            toolbar,\r\n            R.string.navigation_drawer_open,\r\n            R.string.navigation_drawer_close\r\n        )\r\n        binding.drawerLayout.addDrawerListener(toggle)\r\n        toggle.syncState()\r\n\r\n        replaceFragment(FragmentInicioP())\r\n        binding.navigationView.setCheckedItem(R.id.op_inicio_c)\r\n\r\n        binding.navigationView.setNavigationItemSelectedListener(this)\r\n\r\n        firebaseAuth = FirebaseAuth.getInstance()\r\n        comprobarSesion()\r\n    }\r\n\r\n    private fun replaceFragment(fragment: Fragment) {\r\n        supportFragmentManager\r\n            .beginTransaction()\r\n            .replace(R.id.navFragment, fragment)\r\n            .commit()\r\n    }\r\n\r\n    override fun onStart() {\r\n        super.onStart()\r\n        comprobarSesion()\r\n    }\r\n\r\n    private fun cerrarSesion() {\r\n        firebaseAuth.signOut()\r\n        val intent = Intent(this, SelecionarTipoActivity::class.java)\r\n        intent.flags = Intent.FLAG_ACTIVITY_NEW_TASK or Intent.FLAG_ACTIVITY_CLEAR_TASK\r\n        startActivity(intent)\r\n        finish()\r\n        Toast.makeText(this, \"Sesión cerrada\", Toast.LENGTH_SHORT).show()\r\n    }\r\n\r\n    private fun comprobarSesion() {\r\n        if (firebaseAuth.currentUser == null) {\r\n            val intent = Intent(this, SelecionarTipoActivity::class.java)\r\n            intent.flags = Intent.FLAG_ACTIVITY_NEW_TASK or Intent.FLAG_ACTIVITY_CLEAR_TASK\r\n            startActivity(intent)\r\n            finish()\r\n            Toast.makeText(this, \"Registrate\", Toast.LENGTH_SHORT).show()\r\n        } else {\r\n            Toast.makeText(this, \"Bienvenido\", Toast.LENGTH_SHORT).show()\r\n        }\r\n    }\r\n\r\n    override fun onNavigationItemSelected(item: MenuItem): Boolean {\r\n        when (item.itemId) {\r\n            R.id.op_inicio_c -> replaceFragment(FragmentInicioP())\r\n            R.id.op_cerrar_sesion_c -> cerrarSesion()\r\n        }\r\n        binding.drawerLayout.closeDrawer(GravityCompat.START)\r\n        return true\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/myappcancheito/postulante/MainActivityPostulante.kt b/app/src/main/java/com/example/myappcancheito/postulante/MainActivityPostulante.kt
--- a/app/src/main/java/com/example/myappcancheito/postulante/MainActivityPostulante.kt	(revision 803997e8d66606b6bd80ea336dacd55db3d85c57)
+++ b/app/src/main/java/com/example/myappcancheito/postulante/MainActivityPostulante.kt	(date 1758579459840)
@@ -12,6 +12,7 @@
 import com.example.myappcancheito.SelecionarTipoActivity
 import com.example.myappcancheito.databinding.ActivityMainPostulanteBinding
 import com.example.myappcancheito.postulante.Nav_Fragments_Postulante.FragmentInicioP
+import com.example.myappcancheito.postulante.Nav_Fragments_Postulante.FragmentPerfilP
 import com.google.android.material.navigation.NavigationView
 import com.google.firebase.auth.FirebaseAuth
 
@@ -83,6 +84,7 @@
     override fun onNavigationItemSelected(item: MenuItem): Boolean {
         when (item.itemId) {
             R.id.op_inicio_c -> replaceFragment(FragmentInicioP())
+            R.id.op_mi_perfil_c -> replaceFragment(FragmentPerfilP())
             R.id.op_cerrar_sesion_c -> cerrarSesion()
         }
         binding.drawerLayout.closeDrawer(GravityCompat.START)
Index: .idea/deploymentTargetSelector.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"deploymentTargetSelector\">\r\n    <selectionStates>\r\n      <SelectionState runConfigName=\"app\">\r\n        <option name=\"selectionMode\" value=\"DROPDOWN\" />\r\n        <DropdownSelection timestamp=\"2025-09-16T13:28:37.682837800Z\">\r\n          <Target type=\"DEFAULT_BOOT\">\r\n            <handle>\r\n              <DeviceId pluginId=\"PhysicalDevice\" identifier=\"serial=7b23de5e\" />\r\n            </handle>\r\n          </Target>\r\n        </DropdownSelection>\r\n        <DialogSelection />\r\n      </SelectionState>\r\n    </selectionStates>\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/deploymentTargetSelector.xml b/.idea/deploymentTargetSelector.xml
--- a/.idea/deploymentTargetSelector.xml	(revision 803997e8d66606b6bd80ea336dacd55db3d85c57)
+++ b/.idea/deploymentTargetSelector.xml	(date 1758579384667)
@@ -4,10 +4,10 @@
     <selectionStates>
       <SelectionState runConfigName="app">
         <option name="selectionMode" value="DROPDOWN" />
-        <DropdownSelection timestamp="2025-09-16T13:28:37.682837800Z">
+        <DropdownSelection timestamp="2025-09-22T22:09:29.354837600Z">
           <Target type="DEFAULT_BOOT">
             <handle>
-              <DeviceId pluginId="PhysicalDevice" identifier="serial=7b23de5e" />
+              <DeviceId pluginId="LocalEmulator" identifier="path=C:\Users\LiFriedRice\.android\avd\Pixel_9a.avd" />
             </handle>
           </Target>
         </DropdownSelection>
Index: app/src/main/java/com/example/myappcancheito/postulante/Nav_Fragments_Postulante/PostulanteProfile.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/myappcancheito/postulante/Nav_Fragments_Postulante/PostulanteProfile.kt b/app/src/main/java/com/example/myappcancheito/postulante/Nav_Fragments_Postulante/PostulanteProfile.kt
new file mode 100644
--- /dev/null	(date 1758579384248)
+++ b/app/src/main/java/com/example/myappcancheito/postulante/Nav_Fragments_Postulante/PostulanteProfile.kt	(date 1758579384248)
@@ -0,0 +1,14 @@
+package com.example.myappcancheito.postulante.Nav_Fragments_Postulante
+
+data class PostulanteProfile(
+    val uid: String? = null,
+    val nombre_completo: String? = null,
+    val email: String? = null,
+    val tipoUsuario: String? = null,
+    val tiempo_registro: Any? = null, // Long (millis) o String
+    val ubicacion: String? = null,    // OPCIONAL
+    val formacion: String? = null,    // OPCIONAL
+    val experiencia: String? = null,  // OPCIONAL
+    val fotoPerfilUrl: String? = null,// OPCIONAL
+    val cvUrl: String? = null         // OPCIONAL
+)
